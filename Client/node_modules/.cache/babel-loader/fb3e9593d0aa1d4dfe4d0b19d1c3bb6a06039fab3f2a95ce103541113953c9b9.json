{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javie\\\\Desktop\\\\code\\\\M2\\\\ProyectoM2\\\\rickandmorty\\\\src\\\\components\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n// useParams nos permite acceder a una variable, por ejemplo la del link /detail/56 (id)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = '69234e5e5465.65ccca72c23bdad6aed0';\nconst Detail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // devuelve un objeto use Params, el id lo recibe desde app <Detail/>\n\n  const [character, setCharacter] = useState({}); // con esto inicia {} \n\n  useEffect(() => {\n    // simula los ciclos de vida \n    axios(`${URL_BASE}/${id}?key=${API_KEY}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacter(data);\n      } else {\n        alert('No hay personajes con ese ID');\n      }\n    });\n    return setCharacter({});\n  }, [id]); // useEfect depende desde id, sino se crea loop infinito\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Detail, \"fR6uIhTjIVaIqfngtFT7juNjp60=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["axios","useParams","useState","useEffect","jsxDEV","_jsxDEV","URL_BASE","API_KEY","Detail","_s","id","character","setCharacter","then","_ref","data","name","alert","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/javie/Desktop/code/M2/ProyectoM2/rickandmorty/src/components/Detail/Detail.jsx"],"sourcesContent":["\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n// useParams nos permite acceder a una variable, por ejemplo la del link /detail/56 (id)\r\n\r\nconst URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\r\nconst API_KEY = '69234e5e5465.65ccca72c23bdad6aed0';\r\n\r\nconst Detail = () => {\r\n\r\n    const {id} = useParams(); // devuelve un objeto use Params, el id lo recibe desde app <Detail/>\r\n\r\n    const [character, setCharacter] = useState ({}); // con esto inicia {} \r\n   \r\n    useEffect(() => { // simula los ciclos de vida \r\n        axios(`${URL_BASE}/${id}?key=${API_KEY}`).then(({ data }) => {\r\n           if (data.name) {\r\n              setCharacter(data);\r\n           } else {\r\n             alert('No hay personajes con ese ID');\r\n           }\r\n        });\r\n        return setCharacter({});\r\n     }, [id]); // useEfect depende desde id, sino se crea loop infinito\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAG,+CAA+C;AAChE,MAAMC,OAAO,GAAG,mCAAmC;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM;IAACC;EAAE,CAAC,GAAGT,SAAS,EAAE,CAAC,CAAC;;EAE1B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjDC,SAAS,CAAC,MAAM;IAAE;IACdH,KAAK,CAAE,GAAEM,QAAS,IAAGI,EAAG,QAAOH,OAAQ,EAAC,CAAC,CAACM,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACrD,IAAIC,IAAI,CAACC,IAAI,EAAE;QACZJ,YAAY,CAACG,IAAI,CAAC;MACrB,CAAC,MAAM;QACLE,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACH,CAAC,CAAC;IACF,OAAOL,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC,CAAC,CAAC;;EAGX,oBACIL,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEd,CAAC;AAAAZ,EAAA,CAvBKD,MAAM;EAAA,QAEKP,SAAS;AAAA;AAAAqB,EAAA,GAFpBd,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}