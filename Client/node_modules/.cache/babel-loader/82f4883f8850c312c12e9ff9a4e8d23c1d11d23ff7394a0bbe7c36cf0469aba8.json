{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javie\\\\Desktop\\\\code\\\\M2\\\\ProyectoM2\\\\rickandmorty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport style from './Form.module.css';\nimport { useState } from 'react';\nimport validation from '../Validation/Validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [errors, setErrors] = useState({});\n  const [userData, setUserData] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = event => {\n    setUserData({\n      ...userData,\n      // copia de lo previo\n      [event.target.name]: event.target.value // .name para llamar a email o password según corresponda\n    });\n\n    setErrors(validation({\n      ...userData,\n      [event.target.name]: event.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: style.formCaja,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: userData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: userData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"ujTtzs3pHQspxHoP93R7F8BwugE=\");\n_c = Form;\nexport default Form;\n\n// onChange queda atento a los cambios que hace el usuario en los inputs (email/contraseña) y le avisa a handleChange\n// en handleChange tengo el State donde voy a hacer cambio del estado para que coindida con lo que ingresa el usuario\n\n// los estados NO se importan, se pueden pasar como parámetro \nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["style","useState","validation","jsxDEV","_jsxDEV","Form","_s","errors","setErrors","userData","setUserData","email","password","handleChange","event","target","name","value","className","formCaja","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/javie/Desktop/code/M2/ProyectoM2/rickandmorty/src/components/Form/Form.jsx"],"sourcesContent":["import style from './Form.module.css'\r\nimport { useState } from 'react';\r\n\r\nimport validation from '../Validation/Validation';\r\n\r\nconst Form = () => {\r\n\r\n    const [errors, setErrors] = useState ({})\r\n\r\n    const [userData, setUserData] = useState({\r\n        email:'', \r\n        password:''\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setUserData({\r\n            ...userData, // copia de lo previo\r\n            [event.target.name]: event.target.value // .name para llamar a email o password según corresponda\r\n        })\r\n\r\n        setErrors(validation({\r\n            ...userData,\r\n            [event.target.name]: event.target.value\r\n        }))\r\n\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        \r\n        <form className={style.formCaja}>\r\n            <label htmlFor=\"email\">Email: </label>\r\n            <input type=\"text\" name='email' value={userData.email} onChange={handleChange}/>\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <input type=\"password\" name='password' value={userData.password} onChange={handleChange}/>\r\n\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form; \r\n\r\n\r\n// onChange queda atento a los cambios que hace el usuario en los inputs (email/contraseña) y le avisa a handleChange\r\n// en handleChange tengo el State donde voy a hacer cambio del estado para que coindida con lo que ingresa el usuario\r\n\r\n// los estados NO se importan, se pueden pasar como parámetro "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAE,CAAC,CAAC,CAAC;EAEzC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACrCU,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAC;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5BJ,WAAW,CAAC;MACR,GAAGD,QAAQ;MAAE;MACb,CAACK,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE,KAAK,CAAC;IAC5C,CAAC,CAAC;;IAEFT,SAAS,CAACN,UAAU,CAAC;MACjB,GAAGO,QAAQ;MACX,CAACK,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACtC,CAAC,CAAC,CAAC;EAIP,CAAC;EAED,oBAEIb,OAAA;IAAMc,SAAS,EAAElB,KAAK,CAACmB,QAAS;IAAAC,QAAA,gBAC5BhB,OAAA;MAAOiB,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACtCrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACV,IAAI,EAAC,OAAO;MAACC,KAAK,EAAER,QAAQ,CAACE,KAAM;MAACgB,QAAQ,EAAEd;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAChFrB,OAAA;MAAOiB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC5CrB,OAAA;MAAOsB,IAAI,EAAC,UAAU;MAACV,IAAI,EAAC,UAAU;MAACC,KAAK,EAAER,QAAQ,CAACG,QAAS;MAACe,QAAQ,EAAEd;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAE1FrB,OAAA;MAAAgB,QAAA,EAAQ;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpB;AAEf,CAAC;AAAAnB,EAAA,CAnCKD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAqCV,eAAeA,IAAI;;AAGnB;AACA;;AAEA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}